#!/bin/bash 

if [[ "$_COMMENT"  == "" ]];    then _COMMENT="Comment missing" ; fi
if [[ "$_USER" == "" ]];        then _USER="unknown"            ; fi
if [[ "$_WORKSTATION" == "" ]]; then _WORKSTATION="unknown"     ; fi

w=$_WORKSTATION
fu=$_USER
su=${fu#*\\}

echo "$_COMMENT" > commit_comment.txt
echo "" >> commit_comment.txt
echo "--------------------------" >> commit_comment.txt
echo "Gateway :: " `pwd` >> commit_comment.txt
echo "--------------------------" >> commit_comment.txt
echo "$_FILES" >> commit_comment.txt

#git add *.xml > /dev/null
#git add hooks > /dev/null

gse="false"
if echo "$_FILES" | grep -q "gseChanged"; then
 gse="true"  
fi

echo "$_FILES" > commit_files.txt

read_dom() {
    local IFS=\>
    read -d \< ENTITY CONTENT
}

# this function strips out some of the noise added by GSE
# this stuff tends to cause merge conflicts when working with version control
remove_datestamp() {
    sed -i".bak" '/<!--Autosaved from gateway/d' $1
    rm $1.bak
    sed -i".bak" '/<!--Edited using Gateway Setup Editor version/d' $1
    rm $1.bak
}

# Send back version number to Gateway
ver=`git log --format="%h" -n 1`
#ver="MyVersionNo"
echo "<setup><files>" > commit_return.txt
while read_dom; do
    if [[ $ENTITY = "path" ]] ; then
	echo "<file><path>$CONTENT</path><version>$ver</version></file>" >> commit_return.txt
	remove_datestamp $CONTENT
    fi
    if [[ $ENTITY = "gseChanged" ]] ; then
        gse="true"
    fi
done < commit_files.txt
echo "</files></setup>" >> commit_return.txt

echo $gse
if [ $gse = "true" ] ; then
    git commit -a --file=commit_comment.txt --author="$fu <$su@$w>" > /dev/null
fi
cat commit_return.txt

